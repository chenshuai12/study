<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.redis.dao.mapper.ShopInfoPOMapper" >
  <resultMap id="BaseResultMap" type="com.cs.redis.bean.po.ShopInfoPO" >
    <id column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="shop_desc" property="shopDesc" jdbcType="VARCHAR" />
    <result column="shop_type" property="shopType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shop_id, shop_name, shop_desc, shop_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cs.redis.bean.po.ShopInfoPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from shop_info
    where shop_id = #{shopId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from shop_info
    where shop_id = #{shopId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cs.redis.bean.po.ShopInfoPOExample" >
    delete from shop_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cs.redis.bean.po.ShopInfoPO" >
    insert into shop_info (shop_name, shop_desc,
      shop_type)
    values (#{shopName,jdbcType=VARCHAR}, #{shopDesc,jdbcType=VARCHAR},
      #{shopType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.redis.bean.po.ShopInfoPO" >
    insert into shop_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="shopDesc != null" >
        shop_desc,
      </if>
      <if test="shopType != null" >
        shop_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopDesc != null" >
        #{shopDesc,jdbcType=VARCHAR},
      </if>
      <if test="shopType != null" >
        #{shopType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cs.redis.bean.po.ShopInfoPOExample" resultType="java.lang.Integer" >
    select count(*) from shop_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shop_info
    <set >
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.shopName != null" >
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopDesc != null" >
        shop_desc = #{record.shopDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.shopType != null" >
        shop_type = #{record.shopType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shop_info
    set shop_id = #{record.shopId,jdbcType=BIGINT},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      shop_desc = #{record.shopDesc,jdbcType=VARCHAR},
      shop_type = #{record.shopType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.redis.bean.po.ShopInfoPO" >
    update shop_info
    <set >
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopDesc != null" >
        shop_desc = #{shopDesc,jdbcType=VARCHAR},
      </if>
      <if test="shopType != null" >
        shop_type = #{shopType,jdbcType=INTEGER},
      </if>
    </set>
    where shop_id = #{shopId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.redis.bean.po.ShopInfoPO" >
    update shop_info
    set shop_name = #{shopName,jdbcType=VARCHAR},
      shop_desc = #{shopDesc,jdbcType=VARCHAR},
      shop_type = #{shopType,jdbcType=INTEGER}
    where shop_id = #{shopId,jdbcType=BIGINT}
  </update>
  <resultMap id="map" type="com.cs.redis.bean.bo.ShopNumBO">
    <id column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="count" property="count"/>
  </resultMap>
  <select id="getShopNum" resultMap="map">
    select s.shop_id,COUNT(*) as count from shop_info as s LEFT JOIN product_info as p  on s.shop_id=p.shop_id GROUP BY s.shop_id
  </select>
</mapper>